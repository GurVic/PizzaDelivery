<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
	
    <!--<http auto-config="true" use-expressions="false">-->
        <!--<intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
        <!--<intercept-url pattern="/**" access="ROLE_USER" />-->
        <!--<form-login login-page='/login.jsp' default-target-url="/index.jsp" always-use-default-target="true"/>-->
        <!--<logout logout-url="logout" invalidate-session="true" logout-success-url="/spring_security_login" />-->
    <!--</http>-->

    <beans:import resource="classpath:repositoryContext.xml" />
   <global-method-security secured-annotations="enabled" />

    <!--<http pattern="/rest/**" create-session="stateless">-->
        <!--<intercept-url pattern="/**" access="hasRole('USER')" />-->
        <!--<http-basic />-->
        <!--<csrf disabled="true" />-->
    <!--</http>-->

    <http>
        <intercept-url pattern="/**" access="isFullyAuthenticated()"/>
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/user/**" access="hasRole('USER')" />
        <!--<form-login username-parameter="name"-->
                    <!--password-parameter="password"/>-->
        <!--<logout/>-->
        <http-basic/>
        <logout logout-url="logout" invalidate-session="true" logout-success-url="/jsp/pizza/" />
        <csrf disabled="true" />
    </http>

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT name, password,'true' as enabled FROM customer WHERE name=?"
                               authorities-by-username-query="SELECT name, 'USER' as role FROM customer WHERE name=?"
                               role-prefix="ROLE_" />
        </authentication-provider>
        <authentication-provider>
            <user-service>
                <user name="admin" password="admin" authorities="ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
    </authentication-manager>    
    
</beans:beans>
